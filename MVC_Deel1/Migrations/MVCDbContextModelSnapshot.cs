// <auto-generated />
using System;
using MVC_Deel1.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_Deel1.Migrations
{
    [DbContext(typeof(MVCDbContext))]
    partial class MVCDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MVC_Deel1.Entities.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("BuildingType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("MVC_Deel1.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BtwNummer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MVC_Deel1.Entities.UserUtility", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UtilityId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "UtilityId");

                    b.HasIndex("UtilityId");

                    b.ToTable("UserUtility");
                });

            modelBuilder.Entity("MVC_Deel1.Entities.Utility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("UserId");

                    b.ToTable("Utility");
                });

            modelBuilder.Entity("MVC_Deel1.Entities.User", b =>
                {
                    b.HasOne("MVC_Deel1.Entities.Building", "Building")
                        .WithMany("Users")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("MVC_Deel1.Entities.UserUtility", b =>
                {
                    b.HasOne("MVC_Deel1.Entities.User", "User")
                        .WithMany("UserUtility")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Deel1.Entities.Utility", "Utility")
                        .WithMany("UserUtility")
                        .HasForeignKey("UtilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Utility");
                });

            modelBuilder.Entity("MVC_Deel1.Entities.Utility", b =>
                {
                    b.HasOne("MVC_Deel1.Entities.Building", null)
                        .WithMany("Utilities")
                        .HasForeignKey("BuildingId");

                    b.HasOne("MVC_Deel1.Entities.User", "User")
                        .WithMany("Utilities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MVC_Deel1.Entities.Building", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Utilities");
                });

            modelBuilder.Entity("MVC_Deel1.Entities.User", b =>
                {
                    b.Navigation("UserUtility");

                    b.Navigation("Utilities");
                });

            modelBuilder.Entity("MVC_Deel1.Entities.Utility", b =>
                {
                    b.Navigation("UserUtility");
                });
#pragma warning restore 612, 618
        }
    }
}
